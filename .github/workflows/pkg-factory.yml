name: Feelpp PKG Factory
run-name: "PKG Factory Feel++ [ ${{ inputs.flavor }}/${{ inputs.dist }} ]"
on:
    workflow_dispatch:
      inputs:
        enable-debian:
            description: 'Enable debian distros'
            required: false
            default: 'all'
            type: choice
            options:
            - 'all'
            - 'bookworm'
            - 'testing'
            - 'sid'
        parallel:
          description: 'Number of parallel jobs'
          required: false
          default: "20"
          type: string
        skip:
          description: 'Skip build'
          required: false
          default: ""
          type: string
    workflow_call:
        outputs:
            matrix:
                description: 'Matrix of packages to build'
                value: ${{ jobs.pkg-factory.outputs.matrix }}
        inputs:
            parallel:
                description: 'Number of parallel jobs'
                required: false
                type: string
                default: "20"
            skip:
                description: 'Skip apptainer build'
                required: false
                type: string
                default: ""
            enable-debian:
                description: 'Enable debian distros'
                required: false
                default: 'all'
                type: string

jobs:

  version:
    uses: ./.github/workflows/version.yml
    with:
        continue-on-error: "false"
    secrets: inherit

  version-print:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Print outputs from version workflow
        run: |
          echo "Feel++ Main Version: ${{ needs.version.outputs.main_version }}"
          echo "Feel++ Extra Version: ${{ needs.version.outputs.extra_version }}"
          echo "Feel++ Version: ${{ needs.version.outputs.version }}"
  pkg-factory:
    name: packages
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.pkg-factory.outputs.matrix }}
    steps:
    - uses: actions/github-script@v7
      id: pkg-factory
      with:
        script: |
            console.log(${{ toJson(github.event.inputs) }});
            const debian = ${{ toJson(github.event.inputs.enable-debian) || 'all' }};
            console.log( "enable-debian:", debian );
            function checkDebian(dist) {
              const enabled = ['all', 'bookworm', 'testing', 'sid'];
              return ( enabled.includes(debian) || enabled.includes(dist) );
            }

            const skips = ['all', 'debian', 'bookworm', 'testing', 'sid'].reduce((acc, item) => {
              acc[item] = ${{ toJson(github.event.head_commit.message || '') }}.includes(`skip ${item}`) || ${{ toJson( github.inputs.skip ) }}.includes(item);
              return acc;
            }, {});

            const enables = ['debian', 'bookworm', 'testing', 'sid'].reduce((acc, item) => {
              acc[item] = ${{ toJson(github.event.head_commit.message || '') }}.includes(`enable ${item}`) || checkDebian(item);
              return acc;
            }, {});

            const includes = [];
            if ((!skips.all && !skips.debian && !skips.bookworm) || (enables.bookworm || enables.debian)) {
              includes.push({
                'distro': 'debian/bookworm',
                'flavor': 'debian',
                'dist': 'bookworm',
                'version': '12',
                'docker': 'true',
                'continue-on-error': 'false'
              });
            }
            if ((!skips.all && !skips.debian && !skips.testing) || (enables.testing || enables.debian )) {
              includes.push({
                'distro': 'debian/testing',
                'flavor': 'debian',
                'dist': 'testing',
                'version': 'testing',
                'docker': 'true',
                'continue-on-error': 'true'
              });
            }
            if ((!skips.all && !skips.debian && !skips.sid) || (enables.sid || enables.debian )) {
              includes.push({
                'distro': 'debian/sid',
                'flavor': 'debian',
                'dist': 'sid',
                'version': 'unstable',
                'docker': 'true',
                'continue-on-error': 'true'
              });
            }

            console.log("includes:", includes);
            core.setOutput('matrix', { include: includes });
