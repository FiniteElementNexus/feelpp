# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

PortGroup           cmake 1.1
PortGroup           qt5 1.0
PortGroup           mpi 1.0
PortGroup           xcodeversion 1.0

name                paraview
version             5.9.0
#revision            0

categories          science graphics
platforms           darwin
license             BSD

set branch          [join [lrange [split ${version} .] 0 1] .]

maintainers         {gmail.com:jjstickel @jjstickel} {dstrubbe @dstrubbe} openmaintainer

description         3D data analysis and visualization application

long_description    An open-source, multi-platform data \
    analysis and visualization application. ParaView users can quickly \
    build visualizations to analyze their data using qualitative and \
    quantitative techniques. The data exploration can be done \
    interactively in 3D or programmatically using ParaView's batch \
    processing capabilities.

homepage            https://www.paraview.org/
master_sites        ${homepage}/files/v${branch}/

distname            ParaView-v${version}
#use_xz              yes

checksums           sha256  f96c9c996903b295dcfb7db689411d1d0e6a3ccaeb6935c70deb8cc9e5e657c6 \
    rmd160  c7ee90683c9aa9aec7f2b95d5699e95507fe7374 \
    size    80168992

# fix FindEigen3 else use this one in /opt/local/share/cmake/Modules/FindEigen3.cmake installed by macports
post-extract {
    file copy ${worksrcpath}/VTK/CMake/FindEigen3.cmake  ${worksrcpath}/VTK/CMake/patches/99/FindEigen3.cmake
}


depends_lib-append  path:include/eigen3/Eigen/Eigen:eigen3 \
                    port:glew \
                    port:double-conversion \
                    port:lz4 \
                    port:xz \
                    port:zlib \
                    port:expat \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:libpng \
                    port:tiff \
                    port:icet \
                    port:jsoncpp \
                    port:pugixml \
                    port:protobuf3-cpp \
                    port:libogg \
                    port:libtheora \
                    port:libxml2 \
                    port:freetype \
                    port:hdf5 \
                    port:netcdf \
                    port:netcdf-cxx \
                    port:gl2ps \
                    port:cgnslib \
                    port:PEGTL \
                    port:qttesting \
                    port:readline




qt5.depends_component  sqlite-plugin qttools qtxmlpatterns
qt5.min_version        5.6

compiler.cxx_standard  2011

cmake.install_rpath

# paraview sets its own optimization flags
# configure.optflags

# avoid `Unknown build type "MacPorts".  Allowed values are Debug, Release,`
if {[variant_isset debug]} {
    cmake.build_type    Debug
} else {
    cmake.build_type    Release
}


# configure.pre_args-delete \
#     -DCMAKE_INSTALL_PREFIX="${cmake.install_prefix}"

configure.post_args-append \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

# ${destroot} needs to be part of MACOSX_APP_INSTALL_PREFIX; see further
# comments below, JJS 12/21/15
configure.args-append \
    -DBUILD_TESTING:BOOL=OFF \
    -DPARAVIEW_BUILD_SHARED_LIBS=ON \
    -DPARAVIEW_USE_MPI:BOOL=OFF \
    -DPARAVIEW_INSTALL_DEVELOPMENT_FILES=ON \
    -DPARAVIEW_USE_QT=ON \
    -DQt5_DIR=${qt_dir} \
    -DPARAVIEW_BUILD_WITH_EXTERNAL:BOOL=ON \
    -DVTK_MODULE_USE_EXTERNAL_VTK_utf8:BOOL=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_libharu:BOOL=OFF


pre-configure {
    configure.args-append -DCMAKE_CXX_COMPILER=${configure.cxx} \
        -DCMAKE_C_COMPILER=${configure.cc}

       if {[mpi_variant_isset]} {
           configure.args-delete -DPARAVIEW_USE_MPI:BOOL=OFF
           configure.args-append  \
               -DPARAVIEW_USE_MPI:BOOL=ON \
               -DMPI_C_COMPILER=${mpi.cc} \
               -DMPI_CXX_COMPILER=${mpi.cxx} \
               -DMPIEXEC=${mpi.exec}


            if {[vercmp ${xcodeversion} 9.0] >= 0 && [vercmp ${xcodeversion} 10.0] < 0} {
               # resolves a problem on Sierra:
               # /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__threading_support:156:1: error: unknown type name 'mach_port_t'
               # mach_port_t __libcpp_thread_get_port();
               # https://github.com/arvidn/libtorrent/issues/2364#issuecomment-336175406
               configure.cxxflags-append \
                   -D_DARWIN_C_SOURCE
            }
       }
}


mpi.setup

# Supported pythons
set python_versions {35 36 37 38}

foreach pyver ${python_versions} {
    # Conflicting python versions
    set other_python_versions {}
    foreach other_pyver ${python_versions} {
        if {${other_pyver} ne ${pyver}} {
            if {${other_pyver} ni ${other_python_versions}} {
                lappend other_python_versions python${other_pyver}
            }
        }
    }

    # Get python branch
    set python_branch  "[string range ${pyver} 0 end-1].[string index ${pyver} end]"

    variant python${pyver} conflicts {*}${other_python_versions} description "Add Python ${python_branch} support" "
            depends_lib-append port:py${pyver}-matplotlib
            configure.args-append \
                -DPARAVIEW_USE_PYTHON:BOOL=ON \
                -DPython3_EXECUTABLE=${prefix}/bin/python${python_branch}

            if {[mpi_variant_isset]} {
                depends_lib-append port:py${pyver}-mpi4py
            }
    "
}

foreach pyver ${python_versions} {
    if {[variant_isset python${pyver}]} {
        notes-append\
            "\n Currently Paraview installs as an app, including the Python modules. To use with MacPorts Python, add ${applications_dir}/paraview.app/Contents/Python/:${applications_dir}/paraview.app/Contents/Libraries/ to PYTHONPATH and ${applications_dir}/paraview.app/Contents/Libraries/ to DYLD_LIBRARY_PATH. Also, simultaneous use of independent vtk libraries, e.g. with Mayavi, may result in segfault."
    }

}

variant ffmpeg description {Add support for FFMPEG} {
   depends_lib-append port:ffmpeg
   configure.args-append -DPARAVIEW_ENABLE_FFMPEG:BOOL=ON
}

variant xdmf description {Add support for XDMF files I/O} {
    depends_lib-append port:netcdf-cxx \
                       port:xdmf
    configure.args-append -DPARAVIEW_ENABLE_XDMF3:BOOL=ON
}

default_variants-append +ffmpeg

livecheck.type      regex
livecheck.url       https://gitlab.kitware.com/paraview/paraview/tags
livecheck.regex     ParaView (\[0-9.\]+)\$

test.run            yes
pre-test {
    if {![variant_isset testing]} {
        ui_error "You must build with +testing variant to be able to run the tests."
        return -code error "Build with +testing for test phase."
    }
}

variant testing description {Build executables and download data to be able to run tests.} {
    configure.args-replace  -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTING:BOOL=ON
}
