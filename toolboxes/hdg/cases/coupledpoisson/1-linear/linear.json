{
    "Name": "HDG-CoupledMixedPoisson-linear",
    "ShortName": "CMP",
    "Models":
    {
        "equations":"hdg"
    },
    "Parameters":
    {
        "Cb":1,
        "Rb":2,
        "L":1,
        "H":2,
        "a":0.5,
        "b":10,
        "c":"2*Pi",
        "Rout":0.5,
        "R1":"1/(4*Pi*Pi)",
        "C1":1,
        "k":1,
        "p":"10+Pi*exp(2-x)*cos(2*Pi*t)+0.5*sin(2*Pi*t):x:t",
        "j":"{Pi*exp(2-x)*cos(2*Pi*t),0,0}:x:t",
        "Pi_1.phi":"10+0.5*sin(2*Pi*t)-Pi*cos(2*Pi*t):t",
        "Pi_2.phi":"10+sin(2*Pi*t)-Pi*cos(2*Pi*t):t",
        "Pi_out.p.v":"10+0.5*sin(2*Pi*t):t"
    },
    "Materials":
    {
        "omega":
        {
            "poisson_d":1,
            "poisson_c":"k:k",
            // "expr":"a*c*cos(c*t)*(1-Cb/(k*L*L*L*L)*exp((H-x)/(k*L*L)))-Cb*a*c*c*exp((H-x)/(k*L*L))*sin(c*t):x:y:z:t:a:c:Cb:k:L:H"
            "poisson_f":"-2*Pi*Pi*exp(2-x)*sin(2*Pi*t)+(Pi-Pi*exp(2-x))*cos(2*Pi*t):x:y:z:t"

        }
    },
    "InitialConditions":
    {
        "poisson":
        {
            "potential":
            {
                "Expression":
                {
                    "myic1":
                    {
                        "markers":"omega",
                        "expr": "10+Pi*exp(2-x)*cos(2*Pi*t)+0.5*sin(2*Pi*t):x:t"
                        // "expr":"b+(Cb*a*c*exp((H-x)/(k*L*L)))*cos(c*t)+a*sin(c*t):x:y:z:a:b:c:Cb:H:k:L:t"
                    }
                }
            },
            "buffer":
            {
                "Expression":
                {
                    "myic1":
                    {
                        "markers":"top",
                        "expr":"10+0.5*sin(2*Pi*t)-Pi*cos(2*Pi*t):t"
                        // "expr":"b+a*sin(c*t)-Cb*a*c*cos(c*t):a:b:c:Cb:t"
                    }
                }
            }
        }
    },
    "BoundaryConditions":
    {
        "poisson":
        {
            // "Integral":
            // {
            //     "buffer":
            //     {
            //         "markers":"top",
            //         "expr":"Pi*cos(2*Pi*t):t"
            //     }
            // }
            "CouplingODEs":
            {
                "buffer":
                {
                    "markers":"top",
                    "capacitor": "Cbuffer.C",
                    "resistor": "Rbuffer.R",
                    "circuit": "$cfgdir/test3d0d_linear/test3d0d_linear.fmu",
                    "buffer": "Pi_1.phi"
                }
            },
            "Dirichlet":
            {
                "bottom":
                {
                    "expr":"10+Pi*exp(2-x)*cos(2*Pi*t)+0.5*sin(2*Pi*t):x:y:z:t"
                }
            },
            "Neumann":
            {
                "lateral":
                {
                    "expr":0
                }
            }
        }
    },
    "PostProcess":
    {
        "use-model-name":1,
        "buffer":
        {
            "Exports":
            {
                "fields":["Pi_1.phi","Rbuffer.p.v","R.i"]
            }
        },
        "poisson":
        {
            "Exports":
            {
                "fields":["potential","flux"]
            },
            "Measures":
            {
                "Norm":
                {
                    "potential_error":
                    {
                        "type":"L2-error",
                        "field": "potential",
                        // "solution": "b+(Cb*a*c*exp((H-x)/(k*L*L)))*cos(c*t)+a*sin(c*t):x:y:z:a:b:c:Cb:H:k:L:t",
                        "solution": "10+Pi*exp(2-x)*cos(2*Pi*t)+0.5*sin(2*Pi*t):x:t",
                        "markers":"omega"
                    },
                    "flux_error":
                    {
                        "type":"L2-error",
                        "field":"flux",
                        // "solution":"{0,0,Cb*a*c/L/L*exp((H-x)/(k*L*L))}:x:y:z:t:Cb:a:c:L:H:k",
                        "solution":"{Pi*exp(2-x)*cos(2*Pi*t),0,0}:x:y:z:t",
                        "markers":"omega"
                    }
                }
            },
            "Checkers":
            {
                "Measures":
                {
                    "Norm_potential_error_L2-error":
                    {
                        "value":0,
                        "tolerance":1
                    },
                    "Norm_flux_error_L2-error":
                    {
                        "value":0,
                        "tolerance":1
                    }
                }
            }
        }
    }
}
