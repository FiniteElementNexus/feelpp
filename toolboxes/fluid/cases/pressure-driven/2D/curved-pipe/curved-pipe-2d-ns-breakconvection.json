{
    "Name": "curved pipe Navier-Stokes 2d",
    "ShortName":"cpns2d",
    "Models":
    {
        "fluid":
        {
            "equations":"Stokes"
        }
    },
    "Parameters":
    {
        "nu":1,
        "rho":1,
        "Re":"1/32",
        "pi":3.141592653589793,
        "alpha1":"pi/2:pi",
        "angle":"pi/6:pi",
        "alpha2":"alpha1+angle:alpha1:angle",
        "r1":1.9,
        "r2":2.1,
        "L":"r2-r1:r1:r2",
        "H":"0.5*L*angle:L:angle",
        "pout":1,
        "pin":10, //"pout + 8*H*mu*mu*Re/(rho*L*L*L):pout:H:mu:Re:rho:L",
        "pex":"(pin*(-alpha1+acos(x/sqrt(x^2+y^2)))-pout*(-angle-alpha1+acos(x/sqrt(x^2+y^2))))/angle:x:y:pin:pout:alpha1:angle",
        "uexx":"-(pin-pout)*sqrt(-x^2/(x^2+y^2)+1)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/angle:x:y:pin:pout:alpha1:angle:r1:r2",
        "uexy":"x*(pin-pout)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*sqrt(x^2+y^2)):x:y:pin:pout:alpha1:angle:r1:r2",
        "ptotex":"pex + 0.5*( uexx*uexx + uexy*uexy ):pex:uexx:uexy",
        "ugradexxx":"-(pin-pout)*sqrt(-x^2/(x^2+y^2)+1)*(-0.5*x*r1^2*r2^2*(log(r1)-log(r2))/((x^2+y^2)^(3/2)*(r1^2-r2^2))+0.5*x*log(sqrt(x^2+y^2))/sqrt(x^2+y^2)+0.5*x/sqrt(x^2+y^2)+x*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2)))/angle-(pin-pout)*(x^3/(x^2+y^2)^2-x/(x^2+y^2))*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*sqrt(-x^2/(x^2+y^2)+1)):x:y:pin:pout:alpha1:angle:r1:r2",
        "ugradexxy":"-x^2*(pin-pout)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*(x^2+y^2)^(3/2))+x*(pin-pout)*(-0.5*x*r1^2*r2^2*(log(r1)-log(r2))/((x^2+y^2)^(3/2)*(r1^2-r2^2))+0.5*x*log(sqrt(x^2+y^2))/sqrt(x^2+y^2)+0.5*x/sqrt(x^2+y^2)+x*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2)))/(angle*sqrt(x^2+y^2))+(pin-pout)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*sqrt(x^2+y^2)):x:y:pin:pout:alpha1:angle:r1:r2",
        "ugradexyx":"-x^2*y*(pin-pout)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*(x^2+y^2)^2*sqrt(-x^2/(x^2+y^2)+1))-(pin-pout)*sqrt(-x^2/(x^2+y^2)+1)*(-0.5*y*r1^2*r2^2*(log(r1)-log(r2))/((x^2+y^2)^(3/2)*(r1^2-r2^2))+0.5*y*log(sqrt(x^2+y^2))/sqrt(x^2+y^2)+0.5*y/sqrt(x^2+y^2)+y*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2)))/angle:x:y:pin:pout:alpha1:angle:r1:r2",
        "ugradexyy":"-x*y*(pin-pout)*(0.5*r1^2*r2^2*(log(r1)-log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2))+0.5*sqrt(x^2+y^2)*log(sqrt(x^2+y^2))+sqrt(x^2+y^2)*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(r1^2-r2^2))/(angle*(x^2+y^2)^(3/2))+x*(pin-pout)*(-0.5*y*r1^2*r2^2*(log(r1)-log(r2))/((x^2+y^2)^(3/2)*(r1^2-r2^2))+0.5*y*log(sqrt(x^2+y^2))/sqrt(x^2+y^2)+0.5*y/sqrt(x^2+y^2)+y*(-0.5*r1^2*log(r1)+0.5*r2^2*log(r2))/(sqrt(x^2+y^2)*(r1^2-r2^2)))/(angle*sqrt(x^2+y^2)):x:y:pin:pout:alpha1:angle:r1:r2",
        "Cx":"x*(pin - pout)*(x^2*y*(-pin + pout)*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*(x^2 + y^2)^2*sqrt(-x^2/(x^2 + y^2) + 1)) + (-pin + pout)*sqrt(-x^2/(x^2 + y^2) + 1)*(-0.5*r1^2*r2^2*y*(log(r1) - log(r2))/((r1^2 - r2^2)*(x^2 + y^2)^(3/2)) + 0.5*y*log(sqrt(x^2 + y^2))/sqrt(x^2 + y^2) + 0.5*y/sqrt(x^2 + y^2) + y*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)))/angle)*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*sqrt(x^2 + y^2)) + (-pin + pout)*sqrt(-x^2/(x^2 + y^2) + 1)*((-pin + pout)*sqrt(-x^2/(x^2 + y^2) + 1)*(-0.5*r1^2*r2^2*x*(log(r1) - log(r2))/((r1^2 - r2^2)*(x^2 + y^2)^(3/2)) + 0.5*x*log(sqrt(x^2 + y^2))/sqrt(x^2 + y^2) + 0.5*x/sqrt(x^2 + y^2) + x*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)))/angle + (-pin + pout)*(x^3/(x^2 + y^2)^2 - x/(x^2 + y^2))*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*sqrt(-x^2/(x^2 + y^2) + 1)))*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/angle:x:y:pin:pout:alpha1:angle:r1:r2",
        "Cy":"x*(pin - pout)*(-x*y*(pin - pout)*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*(x^2 + y^2)^(3/2)) + x*(pin - pout)*(-0.5*r1^2*r2^2*y*(log(r1) - log(r2))/((r1^2 - r2^2)*(x^2 + y^2)^(3/2)) + 0.5*y*log(sqrt(x^2 + y^2))/sqrt(x^2 + y^2) + 0.5*y/sqrt(x^2 + y^2) + y*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)))/(angle*sqrt(x^2 + y^2)))*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*sqrt(x^2 + y^2)) + (-pin + pout)*sqrt(-x^2/(x^2 + y^2) + 1)*(-x^2*(pin - pout)*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*(x^2 + y^2)^(3/2)) + x*(pin - pout)*(-0.5*r1^2*r2^2*x*(log(r1) - log(r2))/((r1^2 - r2^2)*(x^2 + y^2)^(3/2)) + 0.5*x*log(sqrt(x^2 + y^2))/sqrt(x^2 + y^2) + 0.5*x/sqrt(x^2 + y^2) + x*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)))/(angle*sqrt(x^2 + y^2)) + (pin - pout)*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/(angle*sqrt(x^2 + y^2)))*(0.5*r1^2*r2^2*(log(r1) - log(r2))/((r1^2 - r2^2)*sqrt(x^2 + y^2)) + 0.5*sqrt(x^2 + y^2)*log(sqrt(x^2 + y^2)) + sqrt(x^2 + y^2)*(-0.5*r1^2*log(r1) + 0.5*r2^2*log(r2))/(r1^2 - r2^2))/angle:x:y:pin:pout:alpha1:angle:r1:r2",
        "rhs":"{Cx,Cy}:Cx:Cy"
    },
    "Meshes":
    {
        "fluid":
        {
            "Import":
            {
                "filename":"$cfgdir/curved-pipe-2d.geo"
            }
        }
    },
    "Materials":
    {
        "Omega":{
            "rho":"1",
            "mu":"nu:nu"
        }
    },
    "BoundaryConditions":
    {
        "fluid":
        {
            "velocity":
            {
                "wall":
                {
                    "expr":"{uexx,uexy}:uexx:uexy"
                }
            },
            "pressure":
            {
                "inlet":
                {
                    "expr":"ptotex:ptotex"
                },
                "outlet":
                {
                    "expr":"ptotex:ptotex"
                }
            }
        }
    },
    "PostProcess":
    {
        "fluid":
        {
            "Measures":
            {
                "Norm":
                {
                    "p": 
                    {
                        "type":"L2-error", 
                        "field":"pressure",
                        "quad":8,
                        "solution":"pex:pex", 
                        "markers":"Omega" 
                    },
                    "u": 
                    {
                        "type":["L2-error","H1-error"], 
                        "field":"velocity",
                        "quad":8,
                        "solution":"{uexx,uexy}:uexx:uexy",
                        "grad_solution":"{ugradexxx, ugradexyx, ugradexxy, ugradexyy}:ugradexxx:ugradexyx:ugradexxy:ugradexyy",
                        "markers":"Omega" 
                    }
                }/*,
                "FlowRate":
                {
                    "u_av_inlet":
                    {
                        "markers":"inlet",
                        "direction":"interior_normal"
                    }
                }*/
            },
            "Checkers":
            {
                "Measures":
                {
                    "Norm_u_L2-error":
                    {
                        "value":0,
                        "tolerance":1
                    },
                    "Norm_u_H1-error":
                    {
                        "value":0,
                        "tolerance":1
                    },
                    "Norm_p_L2-error":
                    {
                        "value":0,
                        "tolerance":1
                    }
                }
            },
            "Exports":
            {
                "fields":["velocity","pressure","pid"],
                "expr":
                {
                    "u_ex":"{uexx,uexy}:uexx:uexy",
                    "p_ex":"pex:pex",
                    "p_totex":"ptotex:ptotex"
                }
            }
        }
    }
}